{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/EditMovie.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport TextArea from \"./form-components/TextArea\";\nimport Select from \"./form-components/Select\";\nimport Alert from \"./ui-components/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = evt => {\n      evt.preventDefault(); // client side validation\n\n      let errors = [];\n\n      if (this.state.movie.title === \"\") {\n        errors.push(\"title\");\n      }\n\n      this.setState({\n        errors: errors\n      });\n\n      if (errors.length > 0) {\n        return false;\n      }\n\n      const data = new FormData(evt.target);\n      const payload = Object.fromEntries(data.entries());\n      console.log(payload);\n      const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify(payload)\n      };\n      fetch(\"http://localhost:8000/v1/admin/editmovie\", requestOptions).then(response => response.json()).then(data => {\n        if (data.error) {\n          this.setState({\n            alert: {\n              type: \"alert-danger\",\n              message: data.error.message\n            }\n          });\n        } else {\n          this.setState({\n            alert: {\n              type: \"alert-success\",\n              message: \"Changes saved!\"\n            }\n          });\n        }\n      });\n    };\n\n    this.handleChange = evt => {\n      let value = evt.target.value;\n      let name = evt.target.name;\n      this.setState(prevState => ({\n        movie: { ...prevState.movie,\n          [name]: value\n        }\n      }));\n    };\n\n    this.state = {\n      movie: {\n        id: 0,\n        title: \"\",\n        release_date: \"\",\n        runtime: \"\",\n        mpaa_rating: \"\",\n        rating: \"\",\n        description: \"\"\n      },\n      mpaaOptions: [{\n        id: \"G\",\n        value: \"G\"\n      }, {\n        id: \"PG\",\n        value: \"PG\"\n      }, {\n        id: \"PG13\",\n        value: \"PG13\"\n      }, {\n        id: \"R\",\n        value: \"R\"\n      }, {\n        id: \"NC17\",\n        value: \"NC17\"\n      }],\n      isLoaded: false,\n      error: null,\n      errors: [],\n      alert: {\n        type: \"d-none\",\n        message: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    if (id > 0) {\n      fetch(\"http://localhost:8000/v1/movie/\" + id).then(response => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.Message = \"Invalid response code: \" + response.status;\n          this.setState({\n            error: err\n          });\n        }\n\n        return response.json();\n      }).then(json => {\n        const releaseDate = new Date(json.movie.release_date);\n        this.setState({\n          movie: {\n            id: id,\n            title: json.movie.title,\n            release_date: releaseDate.toISOString().split(\"T\")[0],\n            runtime: json.movie.runtime,\n            mpaa_rating: json.movie.mpaa_rating,\n            rating: json.movie.rating,\n            description: json.movie.description\n          },\n          isLoaded: true\n        }, error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n      });\n    } else {\n      this.setState({\n        isLoaded: true\n      });\n    }\n  }\n\n  render() {\n    let {\n      movie,\n      isLoaded,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add/Edit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          alertType: this.state.alert.type,\n          alertMessage: this.state.alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"id\",\n            id: \"id\",\n            value: movie.id,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Title\",\n            className: this.hasError(\"title\") ? \"is-invalid\" : \"\",\n            type: \"text\",\n            name: \"title\",\n            value: movie.title,\n            handleChange: this.handleChange,\n            errorDiv: this.hasError(\"title\") ? \"text-danger\" : \"d-none\",\n            errorMsg: \"Please enter a title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Release Date\",\n            type: \"date\",\n            name: \"release_date\",\n            value: movie.release_date,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Runtime\",\n            type: \"text\",\n            name: \"runtime\",\n            value: movie.runtime,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            title: \"MPAA Rating\",\n            name: \"mpaa_rating\",\n            options: this.state.mpaaOptions,\n            value: movie.mpaa_rating,\n            handleChange: this.handleChange,\n            placeholder: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Rating\",\n            type: \"text\",\n            name: \"rating\",\n            value: movie.rating,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            title: \"Description\",\n            name: \"description\",\n            value: movie.description,\n            rows: \"3\",\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/EditMovie.js"],"names":["React","Component","Fragment","Input","TextArea","Select","Alert","EditMovie","constructor","props","handleSubmit","evt","preventDefault","errors","state","movie","title","push","setState","length","data","FormData","target","payload","Object","fromEntries","entries","console","log","requestOptions","method","body","JSON","stringify","fetch","then","response","json","error","alert","type","message","handleChange","value","name","prevState","id","release_date","runtime","mpaa_rating","rating","description","mpaaOptions","isLoaded","bind","hasError","key","indexOf","componentDidMount","match","params","status","err","Error","Message","releaseDate","Date","toISOString","split","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport \"./EditMovie.css\";\r\nimport Input from \"./form-components/Input\";\r\nimport TextArea from \"./form-components/TextArea\";\r\nimport Select from \"./form-components/Select\";\r\nimport Alert from \"./ui-components/Alert\";\r\n\r\nexport default class EditMovie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: {\r\n                id: 0,\r\n                title: \"\",\r\n                release_date: \"\",\r\n                runtime: \"\",\r\n                mpaa_rating: \"\",\r\n                rating: \"\",\r\n                description: \"\",\r\n            },\r\n            mpaaOptions: [\r\n                { id: \"G\", value: \"G\" },\r\n                { id: \"PG\", value: \"PG\" },\r\n                { id: \"PG13\", value: \"PG13\" },\r\n                { id: \"R\", value: \"R\" },\r\n                { id: \"NC17\", value: \"NC17\" },\r\n            ],\r\n            isLoaded: false,\r\n            error: null,\r\n            errors: [],\r\n            alert: {\r\n                type: \"d-none\",\r\n                message: \"\",\r\n            },\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        // client side validation\r\n        let errors = [];\r\n        if (this.state.movie.title === \"\") {\r\n            errors.push(\"title\");\r\n        }\r\n\r\n        this.setState({ errors: errors });\r\n\r\n        if (errors.length > 0) {\r\n            return false;\r\n        }\r\n\r\n        const data = new FormData(evt.target);\r\n        const payload = Object.fromEntries(data.entries());\r\n        console.log(payload);\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify(payload),\r\n        };\r\n\r\n        fetch(\"http://localhost:8000/v1/admin/editmovie\", requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    this.setState({\r\n                        alert: { type: \"alert-danger\", message: data.error.message },\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        alert: { type: \"alert-success\", message: \"Changes saved!\" },\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        let value = evt.target.value;\r\n        let name = evt.target.name;\r\n        this.setState((prevState) => ({\r\n            movie: {\r\n                ...prevState.movie,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    hasError(key) {\r\n        return this.state.errors.indexOf(key) !== -1;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        if (id > 0) {\r\n            fetch(\"http://localhost:8000/v1/movie/\" + id)\r\n                .then((response) => {\r\n                    if (response.status !== \"200\") {\r\n                        let err = Error;\r\n                        err.Message = \"Invalid response code: \" + response.status;\r\n                        this.setState({ error: err });\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then((json) => {\r\n                    const releaseDate = new Date(json.movie.release_date);\r\n\r\n                    this.setState(\r\n                        {\r\n                            movie: {\r\n                                id: id,\r\n                                title: json.movie.title,\r\n                                release_date: releaseDate.toISOString().split(\"T\")[0],\r\n                                runtime: json.movie.runtime,\r\n                                mpaa_rating: json.movie.mpaa_rating,\r\n                                rating: json.movie.rating,\r\n                                description: json.movie.description,\r\n                            },\r\n                            isLoaded: true,\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error,\r\n                            });\r\n                        }\r\n                    );\r\n                });\r\n        } else {\r\n            this.setState({ isLoaded: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { movie, isLoaded, error } = this.state;\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <p>Loading...</p>;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <h2>Add/Edit Movie</h2>\r\n                    <Alert\r\n                        alertType={this.state.alert.type}\r\n                        alertMessage={this.state.alert.message}\r\n                    />\r\n                    <hr />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input\r\n                            type=\"hidden\"\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n                            value={movie.id}\r\n                            onChange={this.handleChange}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Title\"}\r\n                            className={this.hasError(\"title\") ? \"is-invalid\" : \"\"}\r\n                            type={\"text\"}\r\n                            name={\"title\"}\r\n                            value={movie.title}\r\n                            handleChange={this.handleChange}\r\n                            errorDiv={this.hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n                            errorMsg={\"Please enter a title\"}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Release Date\"}\r\n                            type={\"date\"}\r\n                            name={\"release_date\"}\r\n                            value={movie.release_date}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Runtime\"}\r\n                            type={\"text\"}\r\n                            name={\"runtime\"}\r\n                            value={movie.runtime}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <Select\r\n                            title={\"MPAA Rating\"}\r\n                            name={\"mpaa_rating\"}\r\n                            options={this.state.mpaaOptions}\r\n                            value={movie.mpaa_rating}\r\n                            handleChange={this.handleChange}\r\n                            placeholder={\"Choose...\"}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Rating\"}\r\n                            type={\"text\"}\r\n                            name={\"rating\"}\r\n                            value={movie.rating}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <TextArea\r\n                            title={\"Description\"}\r\n                            name={\"description\"}\r\n                            value={movie.description}\r\n                            rows={\"3\"}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <hr />\r\n\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </form>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}