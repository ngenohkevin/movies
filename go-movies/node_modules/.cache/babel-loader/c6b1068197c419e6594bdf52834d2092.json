{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/form-components/Select.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = ({\n  name,\n  value,\n  handleChange,\n  placeholder,\n  title,\n  options,\n  ...otherProps\n}) => {\n  var _options$map;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"form-label\",\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...otherProps,\n      className: \"form-select\",\n      name: name // value={value}\n      // onChange={handleChange}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), options === null || options === void 0 ? void 0 : (_options$map = options.map) === null || _options$map === void 0 ? void 0 : _options$map.call(options, option => {\n        // check so that it doesn't throw an error when null/undefined\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"form-select\",\n          value: option.id,\n          label: option.value,\n          children: option.value\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/form-components/Select.js"],"names":["Select","name","value","handleChange","placeholder","title","options","otherProps","map","option","id"],"mappings":";;;AAAA,MAAMA,MAAM,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA,WAA5B;AAAyCC,EAAAA,KAAzC;AAAgDC,EAAAA,OAAhD;AAAyD,KAAGC;AAA5D,CAAD,KAA6E;AAAA;;AACxF,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAO,MAAA,OAAO,EAAEN,IAAhB;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA,iBACK,GADL,EAEKI,KAFL,EAEY,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,uBACQE,UADR;AAEI,MAAA,SAAS,EAAC,aAFd;AAGI,MAAA,IAAI,EAAEN,IAHV,CAII;AACA;AALJ;AAAA,8BAOI;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA,kBAAkBG;AAAlB;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQKE,OARL,aAQKA,OARL,uCAQKA,OAAO,CAAEE,GARd,iDAQK,kBAAAF,OAAO,EAASG,MAAD,IAAY;AAAE;AAC1B,4BACI;AACI,UAAA,SAAS,EAAC,aADd;AAGI,UAAA,KAAK,EAAEA,MAAM,CAACC,EAHlB;AAII,UAAA,KAAK,EAAED,MAAM,CAACP,KAJlB;AAAA,oBAMKO,MAAM,CAACP;AANZ,WAESO,MAAM,CAACC,EAFhB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH,OAXO,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA9BD;;KAAMV,M;AAgCN,eAAeA,MAAf","sourcesContent":["const Select = ({name, value, handleChange, placeholder, title, options, ...otherProps}) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <label htmlFor={name} className=\"form-label\">\r\n                {\" \"}\r\n                {title}{\" \"}\r\n            </label>\r\n            <select\r\n                {...otherProps}\r\n                className=\"form-select\"\r\n                name={name}\r\n                // value={value}\r\n                // onChange={handleChange}\r\n            >\r\n                <option value=\"\">{placeholder}</option>\r\n                {options?.map?.((option) => { // check so that it doesn't throw an error when null/undefined\r\n                    return (\r\n                        <option\r\n                            className=\"form-select\"\r\n                            key={option.id}\r\n                            value={option.id}\r\n                            label={option.value}\r\n                        >\r\n                            {option.value}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;"]},"metadata":{},"sourceType":"module"}