{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/InputProduction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Alert from \"./ui-components/Alert\";\nimport Select from \"./form-components/Select\";\nimport Input from \"./form-components/Input\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputProduction(props) {\n  _s();\n\n  const [input, setInput] = useState({\n    chick: \"\",\n    title: \"\",\n    Production: {},\n    Premises: {}\n  });\n  const [error] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [alert, setAlert] = useState({\n    type: \"d-none\",\n    message: \"\"\n  });\n  const chickOptions = [{\n    id: \"Kuroiler\",\n    value: \"Kuroiler\"\n  }, {\n    id: \"RainbowRooster\",\n    value: \"RainbowRooster\"\n  }, {\n    id: \"Broiler\",\n    value: \"Broiler\"\n  }, {\n    id: \"Layer\",\n    value: \"Layer\"\n  }];\n  const farmOptions = [{\n    id: \"Kaptagat\",\n    value: \"Kaptagat\"\n  }, {\n    id: \"Nyaru\",\n    value: \"Nyaru\"\n  }, {\n    id: \"Nandi\",\n    value: \"Nandi\"\n  }];\n  useEffect(() => {}, []);\n\n  const handleChange = e => {\n    let value = e.target.value;\n    let name = e.target.name;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const backendData = {};\n\n    for (const field of formData.entries()) {\n      const [name, value] = field; // read about destructuring in javascript -> for Objects, Arrays\n\n      if (name === \"title\" || name === \"chick\") {\n        // == and === difference in javascript\n        backendData[name] = value.trim();\n      } // else if (name === \"farm\" || name === \"house\") {\n      //     backendData[\"Premises\"] = {\n      //         ...backendData[\"Premises\"], // the values which are already present, if any\n      //         [name]: value, // you want to change the name to farm to make it easy here\n      //     }\n      // }\n      else {\n        backendData[name] = parseInt(value); // if the value can't be converted to an Integer, set the field to null\n        // [-] chaining operator in javascript, logical OR, AND, ||, &&\n      }\n\n      if (name === \"eggs\" || name === \"dirty\" || name === \"wrong_shape\" || name === \"weak_shell\" || name === \"damaged\" || name === \"hatching_eggs\") {\n        backendData[\"Production\"] = { ...backendData[\"Production\"],\n          [name]: value\n        };\n      }\n    }\n\n    console.log(JSON.stringify(backendData, null, 4)); // -> for Debugging purposes\n\n    let errors = []; // if (!backendData.chick) {\n    //     errors.push(\"chick\")\n    // }\n\n    if (!backendData.title) {\n      // if it is null or an empty string\n      errors.push(\"title\"); //validating title only\n    }\n\n    if (errors.length > 0) {\n      setErrors(errors);\n      return false;\n    } // you can add checks to see if a certain field is empty, eg\n\n\n    if (!(backendData === null || backendData === void 0 ? void 0 : backendData.Premises)) {\n      setErrors(otherErrors => [...otherErrors, \"The farm field is required\"]);\n    }\n\n    if (!backendData.title) {\n      setErrors(otherErrors => [...otherErrors, \"The title is required\"]);\n    }\n\n    const myHeaders = new Headers({\n      \"Content-Type\": \"application/json\"\n    }); //jwt here\n\n    const requestOptions = {\n      method: \"POST\",\n      //body: JSON.stringify(backendData),\n      headers: myHeaders\n    };\n    const chick_ = input.chick.toLowerCase();\n    fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chick_}`, requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setAlert({\n          alert: {\n            type: \"alert-danger\",\n            message: data.error.message\n          }\n        });\n      } else {\n        props.history.push({\n          pathname: \"/all_chicks\"\n        });\n      }\n    });\n  };\n\n  function hasError() {\n    return errors;\n  }\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this);\n  } else {\n    // not necessary\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Production\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alertType: alert.type,\n        alertMessage: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          title: \"Flock\",\n          name: \"chick\",\n          options: chickOptions,\n          value: input.chick,\n          onChange: handleChange,\n          placeholder: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Title\",\n          className: hasError(\"title\") ? \"is-invalid\" : \"\",\n          type: \"text\",\n          name: \"title\",\n          value: input.title,\n          onChange: handleChange,\n          errorDiv: hasError(\"title\") ? \"text-danger\" : \"d-none\",\n          errorMsg: \"Please enter a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Number of Eggs\",\n          type: \"number\",\n          name: \"eggs\",\n          value: input.Production.eggs,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Dirty Eggs\",\n          type: \"number\",\n          name: \"dirty\",\n          value: input.Production.dirty,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Wrong Shape\",\n          type: \"number\" // the rest you can change, lemme demonstrate\n          ,\n          name: \"wrong_shape\",\n          value: input.Production.wrong_shape,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Weak Shell\",\n          type: \"number\",\n          name: \"weak_shell\",\n          value: input.Production.weak_shell,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Damaged Eggs\",\n          type: \"number\",\n          name: \"damaged\",\n          value: input.Production.damaged,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Total Hatching Eggs\",\n          type: \"number\",\n          name: \"hatching_eggs\",\n          value: input.Production.hatching_eggs,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          title: \"Farm\",\n          name: \"farm\",\n          options: farmOptions,\n          value: input.Premises.farm,\n          onChange: handleChange,\n          placeholder: \"Select farm...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"House Number\",\n          type: \"text\",\n          name: \"house\",\n          value: input.Premises.house,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/all_chicks\",\n          className: \"btn btn-warning ms-1\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(InputProduction, \"+VPfY5cOaf4AowxMzbZvQwTaA6I=\");\n\n_c = InputProduction;\nexport default InputProduction;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputProduction\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/InputProduction.jsx"],"names":["React","Fragment","useEffect","useState","Alert","Select","Input","Link","InputProduction","props","input","setInput","chick","title","Production","Premises","error","errors","setErrors","alert","setAlert","type","message","chickOptions","id","value","farmOptions","handleChange","e","target","name","handleSubmit","preventDefault","formData","FormData","currentTarget","backendData","field","entries","trim","parseInt","console","log","JSON","stringify","push","length","otherErrors","myHeaders","Headers","requestOptions","method","headers","chick_","toLowerCase","fetch","then","response","json","data","history","pathname","hasError","eggs","dirty","wrong_shape","weak_shell","damaged","hatching_eggs","farm","house"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport Alert from \"./ui-components/Alert\";\r\nimport Select from \"./form-components/Select\";\r\nimport Input from \"./form-components/Input\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction InputProduction(props) {\r\n    const [input, setInput] = useState({\r\n        chick: \"\",\r\n        title: \"\",\r\n        Production: {},\r\n        Premises: {},\r\n    });\r\n    const [error] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"})\r\n    const chickOptions = [\r\n        { id: \"Kuroiler\", value: \"Kuroiler\" },\r\n        { id: \"RainbowRooster\", value: \"RainbowRooster\" },\r\n        { id: \"Broiler\", value: \"Broiler\" },\r\n        { id: \"Layer\", value: \"Layer\" },\r\n    ]\r\n    const farmOptions = [\r\n        {id: \"Kaptagat\", value: \"Kaptagat\"},\r\n        {id: \"Nyaru\", value: \"Nyaru\"},\r\n        {id: \"Nandi\", value: \"Nandi\"},\r\n    ];\r\n\r\n    useEffect(() =>{\r\n\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        setInput({\r\n            ...input,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.currentTarget);\r\n        const backendData = {};\r\n        for (const field of formData.entries()) {\r\n            const [name, value] = field; // read about destructuring in javascript -> for Objects, Arrays\r\n            if (name === \"title\" || name === \"chick\") { // == and === difference in javascript\r\n                backendData[name] = value.trim();\r\n            }\r\n            // else if (name === \"farm\" || name === \"house\") {\r\n            //     backendData[\"Premises\"] = {\r\n            //         ...backendData[\"Premises\"], // the values which are already present, if any\r\n            //         [name]: value, // you want to change the name to farm to make it easy here\r\n            //     }\r\n            // }\r\n            else {\r\n                backendData[name] = parseInt(value); // if the value can't be converted to an Integer, set the field to null\r\n\r\n                // [-] chaining operator in javascript, logical OR, AND, ||, &&\r\n            }\r\n            if ( name === \"eggs\" || name === \"dirty\" || name === \"wrong_shape\" || name === \"weak_shell\" || name === \"damaged\" || name === \"hatching_eggs\") {\r\n                backendData[\"Production\"] = {\r\n                    ...backendData[\"Production\"],\r\n                    [name]: value,\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log(JSON.stringify(backendData, null, 4)); // -> for Debugging purposes\r\n\r\n        let errors = [];\r\n        // if (!backendData.chick) {\r\n        //     errors.push(\"chick\")\r\n        // }\r\n        if (!backendData.title) { // if it is null or an empty string\r\n            errors.push(\"title\") //validating title only\r\n        }\r\n        if (errors.length > 0) {\r\n            setErrors(errors)\r\n            return false\r\n        }\r\n        // you can add checks to see if a certain field is empty, eg\r\n        if (!backendData?.Premises) {\r\n            setErrors(otherErrors => [...otherErrors, \"The farm field is required\"])\r\n        }\r\n        if (!backendData.title) {\r\n            setErrors(otherErrors => [...otherErrors, \"The title is required\"])\r\n        }\r\n\r\n        const myHeaders = new Headers({\r\n            \"Content-Type\": \"application/json\"\r\n\r\n        });\r\n        //jwt here\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            //body: JSON.stringify(backendData),\r\n            headers: myHeaders,\r\n        }\r\n\r\n        const chick_ = input.chick.toLowerCase();\r\n\r\n        fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chick_}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setAlert({\r\n                        alert: {type: \"alert-danger\", message: data.error.message},\r\n                    })\r\n                } else {\r\n                    props.history.push({\r\n                        pathname: \"/all_chicks\"\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    function hasError() {\r\n        return errors;\r\n    }\r\n\r\n    if (error !== null) {\r\n        return <div>Error: {error.message}</div>\r\n    } else { // not necessary\r\n        return (\r\n            <Fragment>\r\n                <h2>Add/Edit Production</h2>\r\n                <Alert\r\n                    alertType={alert.type}\r\n                    alertMessage={alert.message}\r\n                />\r\n                <hr/>\r\n                <form onSubmit={handleSubmit}>\r\n                    {/*<input*/}\r\n                    {/*    type=\"hidden\"*/}\r\n                    {/*    name=\"id\"*/}\r\n                    {/*    id=\"id\"*/}\r\n                    {/*    defaultValue={input.id}*/}\r\n                    {/*    readOnly*/}\r\n                    {/*/>*/}\r\n\r\n                    <Select\r\n                        title={\"Flock\"}\r\n                        name=\"chick\"\r\n                        options={chickOptions}\r\n                        value={input.chick}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Choose...\"\r\n\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Title\"}\r\n                        className={hasError(\"title\") ? \"is-invalid\" : \"\"}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={input.title}\r\n                        onChange={handleChange}\r\n                        errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n                        errorMsg={\"Please enter a title\"}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Number of Eggs\"\r\n                        type=\"number\"\r\n                        name=\"eggs\"\r\n                        value={input.Production.eggs}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Dirty Eggs\"\r\n                        type=\"number\"\r\n                        name=\"dirty\"\r\n                        value={input.Production.dirty}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Wrong Shape\"\r\n                        type=\"number\" // the rest you can change, lemme demonstrate\r\n                        name=\"wrong_shape\"\r\n                        value={input.Production.wrong_shape}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Input\r\n                        title={\"Weak Shell\"}\r\n                        type=\"number\"\r\n                        name={\"weak_shell\"}\r\n                        value={input.Production.weak_shell}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Damaged Eggs\"}\r\n                        type=\"number\"\r\n                        name={\"damaged\"}\r\n                        value={input.Production.damaged}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Total Hatching Eggs\"}\r\n                        type=\"number\"\r\n                        name={\"hatching_eggs\"}\r\n                        value={input.Production.hatching_eggs}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Select\r\n                        title={\"Farm\"}\r\n                        name={\"farm\"}\r\n                        options={farmOptions}\r\n                        value={input.Premises.farm}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Select farm...\"\r\n                    />\r\n                    <Input\r\n                        title={\"House Number\"}\r\n                        type={\"text\"}\r\n                        name={\"house\"}\r\n                        value={input.Premises.house}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className=\"btn btn-primary\">Save</button>\r\n                    <Link to=\"/all_chicks\" className=\"btn btn-warning ms-1\">\r\n                        Cancel\r\n                    </Link>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputProduction"]},"metadata":{},"sourceType":"module"}