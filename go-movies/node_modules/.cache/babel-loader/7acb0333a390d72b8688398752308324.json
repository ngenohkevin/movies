{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/InputHatchery.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Alert from \"./ui-components/Alert\";\nimport Select from \"./form-components/Select\";\nimport Input from \"./form-components/Input\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputHatchery(props) {\n  _s();\n\n  const [input, setInput] = useState({\n    chick: \"\",\n    title: \"\",\n    Hatchery: {}\n  });\n  const [error] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [alert, setAlert] = useState({\n    type: \"d-none\",\n    message: \"\"\n  });\n  const chickOptions = [{\n    id: \"Kuroiler\",\n    value: \"Kuroiler\"\n  }, {\n    id: \"RainbowRooster\",\n    value: \"RainbowRooster\"\n  }, {\n    id: \"Broiler\",\n    value: \"Broiler\"\n  }, {\n    id: \"Layers\",\n    value: \"Layers\"\n  }];\n  useEffect(() => {}, []);\n\n  const handleChange = e => {\n    let value = e.target.value;\n    let name = e.target.name;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const backendData = {};\n\n    for (const field of formData.entries()) {\n      const [name, value] = field; // read about destructuring in javascript -> for Objects, Arrays\n\n      if (name === \"title\" || name === \"chick\") {\n        // == and === difference in javascript\n        backendData[name] = value.trim();\n      }\n\n      const [hatchery, input] = field;\n\n      if (hatchery === \"infertile\" || hatchery === \"early\" || hatchery === \"middle\" || hatchery === \"late\" || hatchery === \"dead_chicks\" || hatchery === \"alive_chicks\") {\n        backendData[\"Hatchery\"] = { ...backendData[\"Hatchery\"],\n          [hatchery]: parseInt(input)\n        };\n      }\n    }\n\n    console.log(JSON.stringify(backendData, null, 4)); // -> for Debugging purposes\n\n    let errors = []; // if (!backendData.chick) {\n    //     errors.push(\"chick\")\n    // }\n\n    if (!backendData.title) {\n      // if it is null or an empty string\n      errors.push(\"title\"); //validating title only\n    }\n\n    if (errors.length > 0) {\n      setErrors(errors);\n      return false;\n    } // you can add checks to see if a certain field is empty, eg\n\n\n    if (!backendData.title) {\n      setErrors(otherErrors => [...otherErrors, \"The title is required\"]);\n    }\n\n    const myHeaders = new Headers({\n      \"Content-Type\": \"application/json\"\n    }); //jwt here\n\n    const requestOptions = {\n      method: \"PUT\",\n      body: JSON.stringify(backendData),\n      headers: myHeaders\n    };\n    const chick_ = input.chick.toLowerCase();\n    const title_ = input.title;\n    fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chick_}/${title_}`, requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setAlert({\n          alert: {\n            type: \"alert-danger\",\n            message: data.error.message\n          }\n        });\n      } else {\n        props.history.push({\n          pathname: \"/all_chicks\"\n        });\n      }\n    });\n  };\n\n  function hasError() {\n    return errors;\n  }\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  } else {\n    // not necessary\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Hatchery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alertType: alert.type,\n        alertMessage: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          title: \"Flock\",\n          name: \"chick\",\n          options: chickOptions,\n          value: input.chick,\n          onChange: handleChange,\n          placeholder: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Title\",\n          className: hasError(\"title\") ? \"is-invalid\" : \"\",\n          type: \"text\",\n          name: \"title\",\n          value: input.title,\n          onChange: handleChange,\n          errorDiv: hasError(\"title\") ? \"text-danger\" : \"d-none\",\n          errorMsg: \"Please enter a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Infertile\",\n          type: \"number\",\n          name: \"infertile\",\n          value: input.Hatchery.infertile,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Hatched Early\",\n          type: \"number\",\n          name: \"early\",\n          value: input.Hatchery.early,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Hatched Middle\",\n          type: \"number\" // the rest you can change, lemme demonstrate\n          ,\n          name: \"middle\",\n          value: input.Hatchery.middle,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Hatched Late\",\n          type: \"number\",\n          name: \"late\",\n          value: input.Hatchery.late,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Dead Chicks\",\n          type: \"number\",\n          name: \"dead_chicks\",\n          value: input.Hatchery.dead_chicks,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Alive Chicks\",\n          type: \"number\",\n          name: \"alive_chicks\",\n          value: input.Hatchery.alive_chicks,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/all_chicks\",\n          className: \"btn btn-warning ms-1\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(InputHatchery, \"iNzCwoKuCCqOWzD5g9bNIcljoPQ=\");\n\n_c = InputHatchery;\nexport default InputHatchery;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputHatchery\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/InputHatchery.jsx"],"names":["React","Fragment","useEffect","useState","Alert","Select","Input","Link","InputHatchery","props","input","setInput","chick","title","Hatchery","error","errors","setErrors","alert","setAlert","type","message","chickOptions","id","value","handleChange","e","target","name","handleSubmit","preventDefault","formData","FormData","currentTarget","backendData","field","entries","trim","hatchery","parseInt","console","log","JSON","stringify","push","length","otherErrors","myHeaders","Headers","requestOptions","method","body","headers","chick_","toLowerCase","title_","fetch","then","response","json","data","history","pathname","hasError","infertile","early","middle","late","dead_chicks","alive_chicks"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport Alert from \"./ui-components/Alert\";\r\nimport Select from \"./form-components/Select\";\r\nimport Input from \"./form-components/Input\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction InputHatchery(props) {\r\n    const [input, setInput] = useState({\r\n        chick: \"\",\r\n        title: \"\",\r\n        Hatchery: {},\r\n    });\r\n    const [error] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"})\r\n    const chickOptions = [\r\n        { id: \"Kuroiler\", value: \"Kuroiler\" },\r\n        { id: \"RainbowRooster\", value: \"RainbowRooster\" },\r\n        { id: \"Broiler\", value: \"Broiler\" },\r\n        { id: \"Layers\", value: \"Layers\" },\r\n    ]\r\n    useEffect(() =>{\r\n\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        setInput({\r\n            ...input,\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(e.currentTarget);\r\n        const backendData = {};\r\n        for (const field of formData.entries()) {\r\n            const [name, value] = field; // read about destructuring in javascript -> for Objects, Arrays\r\n            if (name === \"title\" || name === \"chick\") { // == and === difference in javascript\r\n                backendData[name] = value.trim();\r\n            }\r\n            const[hatchery, input] = field\r\n            if ( hatchery === \"infertile\" || hatchery === \"early\" || hatchery === \"middle\" || hatchery === \"late\" || hatchery === \"dead_chicks\" || hatchery === \"alive_chicks\") {\r\n                backendData[\"Hatchery\"] = {\r\n                    ...backendData[\"Hatchery\"],\r\n                    [hatchery]: parseInt(input),\r\n                }\r\n            }\r\n\r\n        }\r\n        console.log(JSON.stringify(backendData, null, 4)); // -> for Debugging purposes\r\n\r\n        let errors = [];\r\n        // if (!backendData.chick) {\r\n        //     errors.push(\"chick\")\r\n        // }\r\n        if (!backendData.title) { // if it is null or an empty string\r\n            errors.push(\"title\") //validating title only\r\n        }\r\n        if (errors.length > 0) {\r\n            setErrors(errors)\r\n            return false\r\n        }\r\n        // you can add checks to see if a certain field is empty, eg\r\n        if (!backendData.title) {\r\n            setErrors(otherErrors => [...otherErrors, \"The title is required\"])\r\n        }\r\n\r\n        const myHeaders = new Headers({\r\n            \"Content-Type\": \"application/json\"\r\n\r\n        });\r\n        //jwt here\r\n        const requestOptions = {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(backendData),\r\n            headers: myHeaders,\r\n        }\r\n\r\n        const chick_ = input.chick.toLowerCase();\r\n        const title_ = input.title\r\n\r\n        fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chick_}/${title_}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setAlert({\r\n                        alert: {type: \"alert-danger\", message: data.error.message},\r\n                    })\r\n                } else {\r\n                    props.history.push({\r\n                        pathname: \"/all_chicks\"\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    function hasError() {\r\n        return errors;\r\n    }\r\n\r\n    if (error !== null) {\r\n        return <div>Error: {error.message}</div>\r\n    } else { // not necessary\r\n        return (\r\n            <Fragment>\r\n                <h2>Add/Edit Hatchery</h2>\r\n                <Alert\r\n                    alertType={alert.type}\r\n                    alertMessage={alert.message}\r\n                />\r\n                <hr/>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <Select\r\n                        title={\"Flock\"}\r\n                        name=\"chick\"\r\n                        options={chickOptions}\r\n                        value={input.chick}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Choose...\"\r\n\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Title\"}\r\n                        className={hasError(\"title\") ? \"is-invalid\" : \"\"}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={input.title}\r\n                        onChange={handleChange}\r\n                        errorDiv={hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n                        errorMsg={\"Please enter a title\"}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Infertile\"\r\n                        type=\"number\"\r\n                        name=\"infertile\"\r\n                        value={input.Hatchery.infertile}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Hatched Early\"\r\n                        type=\"number\"\r\n                        name=\"early\"\r\n                        value={input.Hatchery.early}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title=\"Hatched Middle\"\r\n                        type=\"number\" // the rest you can change, lemme demonstrate\r\n                        name=\"middle\"\r\n                        value={input.Hatchery.middle}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Input\r\n                        title={\"Hatched Late\"}\r\n                        type=\"number\"\r\n                        name={\"late\"}\r\n                        value={input.Hatchery.late}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Dead Chicks\"}\r\n                        type=\"number\"\r\n                        name={\"dead_chicks\"}\r\n                        value={input.Hatchery.dead_chicks}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Input\r\n                        title={\"Alive Chicks\"}\r\n                        type=\"number\"\r\n                        name={\"alive_chicks\"}\r\n                        value={input.Hatchery.alive_chicks}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <button className=\"btn btn-primary\">Save</button>\r\n                    <Link to=\"/all_chicks\" className=\"btn btn-warning ms-1\">\r\n                        Cancel\r\n                    </Link>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputHatchery"]},"metadata":{},"sourceType":"module"}