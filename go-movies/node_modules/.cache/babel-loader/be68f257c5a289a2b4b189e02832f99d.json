{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/InputProduction.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Alert from \"./ui-components/Alert\";\nimport Select from \"./form-components/Select\";\nimport Input from \"./form-components/Input\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputProduction(props) {\n  _s();\n\n  const [input, setInput] = useState({});\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [alert, setAlert] = useState({\n    type: \"d-none\",\n    message: \"\"\n  });\n  const chickOptions = [{\n    id: \"Kuroiler\",\n    value: \"Kuroiler\"\n  }, {\n    id: \"RainbowRooster\",\n    value: \"RainbowRooster\"\n  }, {\n    id: \"Broiler\",\n    value: \"Broiler\"\n  }, {\n    id: \"Layer\",\n    value: \"Layer\"\n  }];\n  const farmOptions = [{\n    id: \"Kaptagat\",\n    value: \"Kaptagat\"\n  }, {\n    id: \"Nyaru\",\n    value: \"Nyaru\"\n  }, {\n    id: \"Nandi\",\n    value: \"Nandi\"\n  }];\n  useEffect(() => {});\n\n  const handleChange = e => {\n    let value = e.target.value;\n    let name = e.target.name;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = [];\n\n    if (input.title === \"\") {\n      errors.push(\"title\"); //validating title only\n    }\n\n    setErrors(errors);\n\n    if (errors.length > 0) {\n      return false;\n    }\n\n    const data = new FormData(e.target);\n    const payload = Object.fromEntries(data.entries());\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\"); //jwt here\n\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: myHeaders\n    };\n    fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chickOptions}`, requestOptions).then(response => response.json()).then(data => {\n      if (data.error) {\n        setAlert({\n          alert: {\n            type: \"alert-danger\",\n            message: data.error.message\n          }\n        });\n      } else {\n        props.history.push({\n          pathname: \"/all_chicks\"\n        });\n      }\n    });\n  };\n\n  function hasError(key) {\n    return errors.indexOf(key) !== -1;\n  }\n\n  if (error !== null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add/Edit Hatchery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alertType: alert.type,\n        alertMessage: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"id\",\n          id: \"id\",\n          value: input.id,\n          onChange: input.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          title: \"Flock\",\n          name: \"chickName\",\n          options: this.state.chickOptions,\n          value: input.chickName,\n          handleChange: handleChange,\n          placeholder: \"Choose...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Title\",\n          className: this.hasError(\"title\") ? \"is-invalid\" : \"\",\n          type: \"text\",\n          name: \"title\",\n          value: input.title,\n          handleChange: handleChange(\"title\"),\n          errorDiv: this.hasError(\"title\") ? \"text-danger\" : \"d-none\",\n          errorMsg: \"Please enter a title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Number of Eggs\",\n          type: \"text\",\n          name: \"runtime\",\n          value: input.eggs,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Dirty Eggs\",\n          type: \"text\",\n          name: \"runtime\",\n          value: input.dirty,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Wrong Shape\",\n          type: \"text\",\n          name: \"rating\",\n          value: input.wrong_shape,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Weak Shell\",\n          type: \"text\",\n          name: \"runtime\",\n          value: input.weak_shell,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Damaged Eggs\",\n          type: \"text\",\n          name: \"runtime\",\n          value: input.damaged,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          title: \"Total Hatching Eggs\",\n          type: \"text\",\n          name: \"runtime\",\n          value: input.hatching_eggs,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          title: \"Farm\",\n          options: this.state.farmOptions,\n          value: input.Premises,\n          handleChange: handleChange,\n          placeholder: \"Select Farm...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(InputProduction, \"RmPtd/LV4wUBgngTNMNPtpVgCcc=\");\n\n_c = InputProduction;\nexport default InputProduction;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputProduction\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/InputProduction.jsx"],"names":["React","Fragment","useEffect","useState","Alert","Select","Input","Link","InputProduction","props","input","setInput","error","setError","errors","setErrors","alert","setAlert","type","message","chickOptions","id","value","farmOptions","handleChange","e","target","name","handleSubmit","preventDefault","title","push","length","data","FormData","payload","Object","fromEntries","entries","myHeaders","Headers","append","requestOptions","method","body","JSON","stringify","headers","fetch","then","response","json","history","pathname","hasError","key","indexOf","state","chickName","eggs","dirty","wrong_shape","weak_shell","damaged","hatching_eggs","Premises"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport Alert from \"./ui-components/Alert\";\r\nimport Select from \"./form-components/Select\";\r\nimport Input from \"./form-components/Input\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction InputProduction(props) {\r\n    const [input, setInput] = useState({});\r\n    const [error, setError] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    const [alert, setAlert] = useState({type: \"d-none\", message: \"\"})\r\n    const chickOptions = [\r\n        { id: \"Kuroiler\", value: \"Kuroiler\" },\r\n        { id: \"RainbowRooster\", value: \"RainbowRooster\" },\r\n        { id: \"Broiler\", value: \"Broiler\" },\r\n        { id: \"Layer\", value: \"Layer\" },\r\n    ]\r\n    const farmOptions = [\r\n        {id: \"Kaptagat\", value: \"Kaptagat\"},\r\n        {id: \"Nyaru\", value: \"Nyaru\"},\r\n        {id: \"Nandi\", value: \"Nandi\"},\r\n    ];\r\n\r\n    useEffect(() =>{\r\n\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        let value = e.target.value;\r\n        let name = e.target.name;\r\n        setInput({\r\n            ...input,\r\n            [name]: value,\r\n        });\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = [];\r\n        if (input.title === \"\") {\r\n            errors.push(\"title\") //validating title only\r\n        }\r\n        setErrors(errors)\r\n        if (errors.length > 0) {\r\n            return false\r\n        }\r\n\r\n        const data = new FormData(e.target)\r\n        const payload = Object.fromEntries(data.entries());\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        //jwt here\r\n\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            body: JSON.stringify(payload),\r\n            headers: myHeaders,\r\n        }\r\n        fetch(`https://flockmanager.herokuapp.com/v1/kukuchic/${chickOptions}`, requestOptions)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setAlert({\r\n                        alert: {type: \"alert-danger\", message: data.error.message},\r\n                    })\r\n                } else {\r\n                    props.history.push({\r\n                        pathname: \"/all_chicks\"\r\n                    });\r\n                }\r\n            });\r\n\r\n\r\n    };\r\n    function hasError(key) {\r\n        return errors.indexOf(key) !== -1;\r\n    }\r\n\r\n    if (error !== null) {\r\n\r\n        return <div>Error: {error.message}</div>\r\n\r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <h2>Add/Edit Hatchery</h2>\r\n                <Alert\r\n                    alertType={alert.type}\r\n                    alertMessage={alert.message}\r\n                />\r\n                <hr/>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input\r\n                        type=\"hidden\"\r\n                        name=\"id\"\r\n                        id=\"id\"\r\n                        value={input.id}\r\n                        onChange={input.id}\r\n                    />\r\n\r\n                    <Select\r\n                        title={\"Flock\"}\r\n                        name={\"chickName\"}\r\n                        options={this.state.chickOptions}\r\n                        value={input.chickName}\r\n                        handleChange={handleChange}\r\n                        placeholder=\"Choose...\"\r\n\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Title\"}\r\n                        className={this.hasError(\"title\") ? \"is-invalid\" : \"\"}\r\n                        type={\"text\"}\r\n                        name={\"title\"}\r\n                        value={input.title}\r\n                        handleChange={handleChange(\"title\")}\r\n                        errorDiv={this.hasError(\"title\") ? \"text-danger\" : \"d-none\"}\r\n                        errorMsg={\"Please enter a title\"}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Number of Eggs\"}\r\n                        type={\"text\"}\r\n                        name={\"runtime\"}\r\n                        value={input.eggs}\r\n                        handleChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Dirty Eggs\"}\r\n                        type={\"text\"}\r\n                        name={\"runtime\"}\r\n                        value={input.dirty}\r\n                        handleChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Wrong Shape\"}\r\n                        type={\"text\"}\r\n                        name={\"rating\"}\r\n                        value={input.wrong_shape}\r\n                        handleChange={handleChange}\r\n                    />\r\n                    <Input\r\n                        title={\"Weak Shell\"}\r\n                        type={\"text\"}\r\n                        name={\"runtime\"}\r\n                        value={input.weak_shell}\r\n                        handleChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Damaged Eggs\"}\r\n                        type={\"text\"}\r\n                        name={\"runtime\"}\r\n                        value={input.damaged}\r\n                        handleChange={handleChange}\r\n                    />\r\n\r\n                    <Input\r\n                        title={\"Total Hatching Eggs\"}\r\n                        type={\"text\"}\r\n                        name={\"runtime\"}\r\n                        value={input.hatching_eggs}\r\n                        handleChange={handleChange}\r\n                    />\r\n\r\n                    <Select\r\n                        title={\"Farm\"}\r\n                        options={this.state.farmOptions}\r\n                        value={input.Premises}\r\n                        handleChange={handleChange}\r\n                        placeholder=\"Select Farm...\"\r\n                    />\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputProduction"]},"metadata":{},"sourceType":"module"}