{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/OneGenre.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OneGenre extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      flock: [],\n      isLoaded: false,\n      error: null,\n      genreName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:9000/v1/kukuchic/flock\" + this.props.match.params.id).then(response => {\n      if (response.status !== \"200\") {\n        let err = Error;\n        err.message = \"Invalid response code: \" + response.status;\n        this.setState({\n          error: err\n        });\n      }\n\n      return response.json();\n    }).then(json => {\n      this.setState({\n        flock: json.flock,\n        isLoaded: true,\n        genreName: this.props.location.genreName\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    });\n  }\n\n  render() {\n    let {\n      chicks,\n      isLoaded,\n      error,\n      genreName\n    } = this.state;\n\n    if (!chicks) {\n      chicks = [];\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Genre: \", genreName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: chicks.map(m => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/${m.id}`,\n            className: \"list-group-item list-group-item-action\",\n            children: m.operations\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/OneGenre.js"],"names":["React","Component","Fragment","Link","OneGenre","state","flock","isLoaded","error","genreName","componentDidMount","fetch","props","match","params","id","then","response","status","err","Error","message","setState","json","location","render","chicks","map","m","operations"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,QAAQ,EAAE,KAFN;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,SAAS,EAAE;AAJP,KADoC;AAAA;;AAQ5CC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAA4C,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArE,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC3B,YAAIC,GAAG,GAAGC,KAAV;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAc,4BAA4BJ,QAAQ,CAACC,MAAnD;AACA,aAAKI,QAAL,CAAc;AAAEd,UAAAA,KAAK,EAAEW;AAAT,SAAd;AACH;;AACD,aAAOF,QAAQ,CAACM,IAAT,EAAP;AACH,KARL,EASKP,IATL,CASWO,IAAD,IAAU;AACZ,WAAKD,QAAL,CACI;AACIhB,QAAAA,KAAK,EAAEiB,IAAI,CAACjB,KADhB;AAEIC,QAAAA,QAAQ,EAAE,IAFd;AAGIE,QAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWY,QAAX,CAAoBf;AAHnC,OADJ,EAMKD,KAAD,IAAW;AACP,aAAKc,QAAL,CAAc;AACVf,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA;AAFU,SAAd;AAIH,OAXL;AAaH,KAvBL;AAwBH;;AAEDiB,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA,MAAF;AAAUnB,MAAAA,QAAV;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA;AAA3B,QAAyC,KAAKJ,KAAlD;;AAEA,QAAI,CAACqB,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,EAAT;AACH;;AAED,QAAIlB,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACa,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACd,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI,QAAC,QAAD;AAAA,gCACI;AAAA,gCAAYE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACKiB,MAAM,CAACC,GAAP,CAAYC,CAAD,iBACR,QAAC,IAAD;AAEI,YAAA,EAAE,EAAG,WAAUA,CAAC,CAACb,EAAG,EAFxB;AAGI,YAAA,SAAS,EAAC,wCAHd;AAAA,sBAKKa,CAAC,CAACC;AALP,aACSD,CAAC,CAACb,EADX;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAiBH;AACJ;;AAjE2C","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class OneGenre extends Component {\r\n    state = {\r\n        flock: [],\r\n        isLoaded: false,\r\n        error: null,\r\n        genreName: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:9000/v1/kukuchic/flock\" + this.props.match.params.id)\r\n            .then((response) => {\r\n                if (response.status !== \"200\") {\r\n                    let err = Error;\r\n                    err.message = \"Invalid response code: \" + response.status;\r\n                    this.setState({ error: err });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((json) => {\r\n                this.setState(\r\n                    {\r\n                        flock: json.flock,\r\n                        isLoaded: true,\r\n                        genreName: this.props.location.genreName,\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error,\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let { chicks, isLoaded, error, genreName } = this.state;\r\n\r\n        if (!chicks) {\r\n            chicks = [];\r\n        }\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <p>Loading...</p>;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <h2>Genre: {genreName}</h2>\r\n\r\n                    <div className=\"list-group\">\r\n                        {chicks.map((m) => (\r\n                            <Link\r\n                                key={m.id}\r\n                                to={`/movies/${m.id}`}\r\n                                className=\"list-group-item list-group-item-action\"\r\n                            >\r\n                                {m.operations}\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}