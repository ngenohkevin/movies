{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/ChickHatchery.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChickHatchery() {\n  _s();\n\n  const {\n    chick\n  } = useParams(); // hook to get the name of the chick in the url... e.g /chicks/:chick/hatchery\n\n  const {\n    state: {\n      hatchery\n    }\n  } = useLocation(); // hook to enable us get the pathname, and state sent from clicking the link\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: chick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), hatchery === null || hatchery === void 0 ? void 0 : hatchery.map(chick => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chick.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Infertile: \", chick.Hatchery.infertile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dirty: \", chick.Production.dirty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wrong shape: \", chick.Production.wrong_shape]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, chick.ID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChickHatchery, \"YyIKG6OpO07jF5OIQq892RXI59o=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = ChickHatchery;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChickHatchery\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/ChickHatchery.jsx"],"names":["useLocation","useParams","ChickHatchery","chick","state","hatchery","map","title","Hatchery","infertile","Production","dirty","wrong_shape","ID"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,SAAS,EAA3B,CADoC,CACL;;AAC/B,QAAM;AAAEG,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD;AAAT,MAAwBL,WAAW,EAAzC,CAFoC,CAES;;AAE7C,sBACI;AAAA,4BACI;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAMKE,QANL,aAMKA,QANL,uBAMKA,QAAQ,CAAEC,GAAV,CAAcH,KAAK,iBAChB;AAAoB,MAAA,SAAS,EAAC,eAA9B;AAAA,8BACI;AAAA,kBAAKA,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kCAAeJ,KAAK,CAACK,QAAN,CAAeC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,8BAAWN,KAAK,CAACO,UAAN,CAAiBC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,oCAAiBR,KAAK,CAACO,UAAN,CAAiBE,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,OAAUT,KAAK,CAACU,EAAhB;AAAA;AAAA;AAAA;AAAA,YADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GArBuBX,a;UACFD,S,EACYD,W;;;KAFVE,a","sourcesContent":["import { useLocation, useParams } from \"react-router\";\n\nexport default function ChickHatchery() {\n    const { chick } = useParams(); // hook to get the name of the chick in the url... e.g /chicks/:chick/hatchery\n    const { state: {hatchery} } = useLocation(); // hook to enable us get the pathname, and state sent from clicking the link\n\n    return (\n        <div>\n            <h1>{chick}</h1>\n            {/*<pre>*/}\n            {/*    {JSON.stringify(hatchery, null, 4)}*/}\n            {/*</pre>*/}\n\n            {hatchery?.map(chick => (\n                <div key={chick.ID} className=\"card mb-3 p-3\">\n                    <h2>{chick.title}</h2>\n                    <p>Infertile: {chick.Hatchery.infertile}</p>\n                    <p>Dirty: {chick.Production.dirty}</p>\n                    <p>Wrong shape: {chick.Production.wrong_shape}</p>\n                </div>\n            ))}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}