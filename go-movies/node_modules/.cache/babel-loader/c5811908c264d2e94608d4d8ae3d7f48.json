{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/Adm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n\n  const [Kuroiler, setKuroiler] = useState([]);\n  const [Rainbowrooster, setRainbowrooster] = useState([]);\n  const [Broilers, setBroilers] = useState([]);\n  const [Layers, setLayers] = useState([]);\n\n  const fetchAllChicks = () => {\n    const KuroilerApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/kuroiler';\n    const RainbowroosterApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/rainbowrooster';\n    const BroilerApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/broiler';\n    const LayersApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/layers';\n    const getKuroiler = axios.get(KuroilerApi);\n    const getRainbowrooster = axios.get(RainbowroosterApi);\n    const getBroiler = axios.get(BroilerApi);\n    const getLayers = axios.get(LayersApi);\n    axios.all([getKuroiler, getRainbowrooster, getBroiler, getLayers]).then(axios.spread((...allChicks) => {\n      const allKuroiler = allChicks[0].data.title;\n      const allRainbowrooster = allChicks[1];\n      const allBroiler = allChicks[2];\n      const allLayers = allChicks[3];\n      console.log(allKuroiler);\n      console.log(allRainbowrooster);\n      console.log(allBroiler);\n      console.log(allLayers);\n    }));\n  };\n\n  useEffect(() => {\n    fetchAllChicks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Admin, \"NPe4Wf+/uiMw/iTw8ct8NZL81Mo=\");\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/Adm.jsx"],"names":["useEffect","useState","axios","Admin","Kuroiler","setKuroiler","Rainbowrooster","setRainbowrooster","Broilers","setBroilers","Layers","setLayers","fetchAllChicks","KuroilerApi","RainbowroosterApi","BroilerApi","LayersApi","getKuroiler","get","getRainbowrooster","getBroiler","getLayers","all","then","spread","allChicks","allKuroiler","data","title","allRainbowrooster","allBroiler","allLayers","console","log"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,cAAc,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAG,yDAApB;AACA,UAAMC,iBAAiB,GAAG,+DAA1B;AACA,UAAMC,UAAU,GAAG,wDAAnB;AACA,UAAMC,SAAS,GAAG,uDAAlB;AAEA,UAAMC,WAAW,GAAGf,KAAK,CAACgB,GAAN,CAAUL,WAAV,CAApB;AACA,UAAMM,iBAAiB,GAAGjB,KAAK,CAACgB,GAAN,CAAUJ,iBAAV,CAA1B;AACA,UAAMM,UAAU,GAAGlB,KAAK,CAACgB,GAAN,CAAUH,UAAV,CAAnB;AACA,UAAMM,SAAS,GAAGnB,KAAK,CAACgB,GAAN,CAAUF,SAAV,CAAlB;AAEAd,IAAAA,KAAK,CAACoB,GAAN,CAAU,CAACL,WAAD,EAAcE,iBAAd,EAAiCC,UAAjC,EAA6CC,SAA7C,CAAV,EAAmEE,IAAnE,CACIrB,KAAK,CAACsB,MAAN,CAAa,CAAC,GAAGC,SAAJ,KAAkB;AAC3B,YAAMC,WAAW,GAAGD,SAAS,CAAC,CAAD,CAAT,CAAaE,IAAb,CAAkBC,KAAtC;AACA,YAAMC,iBAAiB,GAAGJ,SAAS,CAAC,CAAD,CAAnC;AACA,YAAMK,UAAU,GAAGL,SAAS,CAAC,CAAD,CAA5B;AACA,YAAMM,SAAS,GAAGN,SAAS,CAAC,CAAD,CAA3B;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,iBAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACH,KAVD,CADJ;AAaH,GAxBD;;AA0BA/B,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;AAIC,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzCuBT,K;;KAAAA,K","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function Admin() {\r\n   const [Kuroiler, setKuroiler] = useState([]);\r\n   const [Rainbowrooster, setRainbowrooster] = useState([]);\r\n   const [Broilers, setBroilers] = useState([]);\r\n   const [Layers, setLayers] = useState([]);\r\n\r\n   const fetchAllChicks = () => {\r\n       const KuroilerApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/kuroiler'\r\n       const RainbowroosterApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/rainbowrooster'\r\n       const BroilerApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/broiler'\r\n       const LayersApi = 'https://flockmanager.herokuapp.com/v1/kukuchic/layers'\r\n\r\n       const getKuroiler = axios.get(KuroilerApi)\r\n       const getRainbowrooster = axios.get(RainbowroosterApi)\r\n       const getBroiler = axios.get(BroilerApi)\r\n       const getLayers = axios.get(LayersApi)\r\n\r\n       axios.all([getKuroiler, getRainbowrooster, getBroiler, getLayers]).then(\r\n           axios.spread((...allChicks) => {\r\n               const allKuroiler = allChicks[0].data.title\r\n               const allRainbowrooster = allChicks[1]\r\n               const allBroiler = allChicks[2]\r\n               const allLayers = allChicks[3]\r\n\r\n               console.log(allKuroiler)\r\n               console.log(allRainbowrooster)\r\n               console.log(allBroiler)\r\n               console.log(allLayers)\r\n           })\r\n       )\r\n   }\r\n\r\n   useEffect(() => {\r\n       fetchAllChicks()\r\n   },[])\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}