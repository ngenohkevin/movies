{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/go-movies/src/Components/OneMovie.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OneMovie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: {},\n      isLoaded: false,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/v1/movie/\" + this.props.match.params.id).then(response => {\n      console.log(\"status code is\", response.status);\n\n      if (response.status !== \"200\") {\n        let err = Error;\n        err.message = \"Invalid response code: \" + response.status;\n        this.setState({\n          error: err\n        });\n      }\n\n      return response.json();\n    }).then(json => {\n      this.setState({\n        movies: json.movies,\n        isLoaded: true\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Movie: \", this.state.movie.title, \" \", this.state.movie.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-compact  table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Run time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [this.state.movie.runtime, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/perigrine/react_tuts/go-movies/src/Components/OneMovie.js"],"names":["React","Component","Fragment","OneMovie","state","movie","isLoaded","error","componentDidMount","fetch","props","match","params","id","then","response","console","log","status","err","Error","message","setState","json","movies","render","title","runtime"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAGA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CG,KAF4C,GAEpC;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,QAAQ,EAAE,KAAvB;AAA8BC,MAAAA,KAAK,EAAE;AAArC,KAFoC;AAAA;;AAI5CC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oCAAoC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7D,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,MAAvC;;AACA,UAAIH,QAAQ,CAACG,MAAT,KAAoB,KAAxB,EAA+B;AAC3B,YAAIC,GAAG,GAAGC,KAAV;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAc,4BAA4BN,QAAQ,CAACG,MAAnD;AACA,aAAKI,QAAL,CAAc;AAACf,UAAAA,KAAK,EAAEY;AAAR,SAAd;AACH;;AACD,aAAOJ,QAAQ,CAACQ,IAAT,EAAP;AACH,KATL,EAUKT,IAVL,CAUWS,IAAD,IAAU;AACZ,WAAKD,QAAL,CAAc;AACNE,QAAAA,MAAM,EAAED,IAAI,CAACC,MADP;AAENlB,QAAAA,QAAQ,EAAG;AAFL,OAAd,EAIKC,KAAD,IAAW;AACP,aAAKe,QAAL,CAAc;AACVhB,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA;AAFU,SAAd;AAIH,OATL;AAWH,KAtBL;AAuBH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA,8BAAY,KAAKrB,KAAL,CAAWC,KAAX,CAAiBqB,KAA7B,OAAqC,KAAKtB,KAAL,CAAWC,KAAX,CAAiBQ,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,oCAAjB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,kCACA;AAAA,oCACI;AAAA,qCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAK,KAAKT,KAAL,CAAWC,KAAX,CAAiBqB;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAA,oCACI;AAAA,qCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,yBAAK,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAjD2C","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\n\r\n\r\nexport default class OneMovie extends Component {\r\n\r\n    state = { movie: {}, isLoaded: false, error: null};\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8000/v1/movie/\" + this.props.match.params.id)\r\n            .then((response) => {\r\n                console.log(\"status code is\", response.status);\r\n                if (response.status !== \"200\") {\r\n                    let err = Error;\r\n                    err.message = \"Invalid response code: \" + response.status;\r\n                    this.setState({error: err})\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((json) => {\r\n                this.setState({\r\n                        movies: json.movies,\r\n                        isLoaded:  true,\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h2>Movie: {this.state.movie.title} {this.state.movie.id}</h2>\r\n                <table className=\"table table-compact  table-striped\">\r\n                    <thead></thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td><strong>Title:</strong></td>\r\n                        <td>{this.state.movie.title}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><strong>Run time:</strong></td>\r\n                        <td>{this.state.movie.runtime} minutes</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Fragment>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}