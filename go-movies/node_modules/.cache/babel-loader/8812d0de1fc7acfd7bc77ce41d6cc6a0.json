{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/EditMovie.js\";\nimport React, { Component, Fragment } from \"react\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport TextArea from \"./form-components/TextArea\";\nimport Select from \"./form-components/Select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      const data = new FormData(evt.target);\n      const payload = Object.fromEntries(data.entries());\n      console.log(payload);\n      const requestOptions = {\n        method: 'POST',\n        body: JSON.stringify(payload)\n      };\n      fetch('http://localhost:8000/v1/admin/editmovie', requestOptions).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.handleChange = evt => {\n      let value = evt.target.value;\n      let name = evt.target.name;\n      this.setState(prevState => ({\n        movie: { ...prevState.movie,\n          [name]: value\n        }\n      }));\n    };\n\n    this.state = {\n      movie: {\n        id: 0,\n        title: \"\",\n        release_date: \"\",\n        runtime: \"\",\n        mpaa_rating: \"\",\n        rating: \"\",\n        description: \"\"\n      },\n      mpaaOptions: [{\n        id: \"G\",\n        value: \"G\"\n      }, {\n        id: \"PG\",\n        value: \"PG\"\n      }, {\n        id: \"PG13\",\n        value: \"PG13\"\n      }, {\n        id: \"R\",\n        value: \"R\"\n      }, {\n        id: \"NC17\",\n        value: \"NC17\"\n      }],\n      isLoaded: false,\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    if (id > 0) {\n      fetch(\"http://localhost:4000/v1/movie/\" + id).then(response => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.Message = \"Invalid response code: \" + response.status;\n          this.setState({\n            error: err\n          });\n        }\n\n        return response.json();\n      }).then(json => {\n        const releaseDate = new Date(json.movie.release_date);\n        this.setState({\n          movie: {\n            id: id,\n            title: json.movie.title,\n            release_date: releaseDate.toISOString().split(\"T\")[0],\n            runtime: json.movie.runtime,\n            mpaa_rating: json.movie.mpaa_rating,\n            rating: json.movie.rating,\n            description: json.movie.description\n          },\n          isLoaded: true\n        }, error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        });\n      });\n    } else {\n      this.setState({\n        isLoaded: true\n      });\n    }\n  }\n\n  render() {\n    let {\n      movie,\n      isLoaded,\n      error\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add/Edit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"id\",\n            id: \"id\",\n            value: movie.id,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Title\",\n            type: \"text\",\n            name: \"title\",\n            value: movie.title,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Release Date\",\n            type: \"date\",\n            name: \"release_date\",\n            value: movie.release_date,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Runtime\",\n            type: \"text\",\n            name: \"runtime\",\n            value: movie.runtime,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            title: \"MPAA Rating\",\n            name: \"mpaa_rating\",\n            options: this.state.mpaaOptions,\n            value: movie.mpaa_rating,\n            handleChange: this.handleChange,\n            placeholder: \"Choose...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            title: \"Rating\",\n            type: \"text\",\n            name: \"rating\",\n            value: movie.rating,\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            title: \"Description\",\n            name: \"description\",\n            value: movie.description,\n            rows: \"3\",\n            handleChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(this.state, null, 3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/EditMovie.js"],"names":["React","Component","Fragment","Input","TextArea","Select","EditMovie","constructor","props","handleSubmit","evt","preventDefault","data","FormData","target","payload","Object","fromEntries","entries","console","log","requestOptions","method","body","JSON","stringify","fetch","then","response","json","handleChange","value","name","setState","prevState","movie","state","id","title","release_date","runtime","mpaa_rating","rating","description","mpaaOptions","isLoaded","error","bind","componentDidMount","match","params","status","err","Error","Message","releaseDate","Date","toISOString","split","render","message"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport \"./EditMovie.css\";\r\nimport Input from \"./form-components/Input\";\r\nimport TextArea from \"./form-components/TextArea\";\r\nimport Select from \"./form-components/Select\";\r\n\r\nexport default class EditMovie extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movie: {\r\n                id: 0,\r\n                title: \"\",\r\n                release_date: \"\",\r\n                runtime: \"\",\r\n                mpaa_rating: \"\",\r\n                rating: \"\",\r\n                description: \"\",\r\n            },\r\n            mpaaOptions: [\r\n                { id: \"G\", value: \"G\" },\r\n                { id: \"PG\", value: \"PG\" },\r\n                { id: \"PG13\", value: \"PG13\" },\r\n                { id: \"R\", value: \"R\" },\r\n                { id: \"NC17\", value: \"NC17\" },\r\n            ],\r\n            isLoaded: false,\r\n            error: null,\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        const data = new FormData(evt.target);\r\n        const payload = Object.fromEntries(data.entries());\r\n        console.log(payload);\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body : JSON.stringify(payload)\r\n        }\r\n\r\n        fetch('http://localhost:8000/v1/admin/editmovie', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n            })\r\n    };\r\n\r\n    handleChange = (evt) => {\r\n        let value = evt.target.value;\r\n        let name = evt.target.name;\r\n        this.setState((prevState) => ({\r\n            movie: {\r\n                ...prevState.movie,\r\n                [name]: value,\r\n            },\r\n        }));\r\n    };\r\n\r\n    componentDidMount() {\r\n        const id = this.props.match.params.id;\r\n        if (id > 0) {\r\n            fetch(\"http://localhost:4000/v1/movie/\" + id)\r\n                .then((response) => {\r\n                    if (response.status !== \"200\") {\r\n                        let err = Error;\r\n                        err.Message = \"Invalid response code: \" + response.status;\r\n                        this.setState({ error: err });\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then((json) => {\r\n                    const releaseDate = new Date(json.movie.release_date);\r\n\r\n                    this.setState(\r\n                        {\r\n                            movie: {\r\n                                id: id,\r\n                                title: json.movie.title,\r\n                                release_date: releaseDate.toISOString().split(\"T\")[0],\r\n                                runtime: json.movie.runtime,\r\n                                mpaa_rating: json.movie.mpaa_rating,\r\n                                rating: json.movie.rating,\r\n                                description: json.movie.description,\r\n                            },\r\n                            isLoaded: true,\r\n                        },\r\n                        (error) => {\r\n                            this.setState({\r\n                                isLoaded: true,\r\n                                error,\r\n                            });\r\n                        }\r\n                    );\r\n                });\r\n        } else {\r\n            this.setState({ isLoaded: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { movie, isLoaded, error } = this.state;\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <p>Loading...</p>;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <h2>Add/Edit Movie</h2>\r\n                    <hr />\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input\r\n                            type=\"hidden\"\r\n                            name=\"id\"\r\n                            id=\"id\"\r\n                            value={movie.id}\r\n                            onChange={this.handleChange}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Title\"}\r\n                            type={\"text\"}\r\n                            name={\"title\"}\r\n                            value={movie.title}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Release Date\"}\r\n                            type={\"date\"}\r\n                            name={\"release_date\"}\r\n                            value={movie.release_date}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Runtime\"}\r\n                            type={\"text\"}\r\n                            name={\"runtime\"}\r\n                            value={movie.runtime}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <Select\r\n                            title={\"MPAA Rating\"}\r\n                            name={\"mpaa_rating\"}\r\n                            options={this.state.mpaaOptions}\r\n                            value={movie.mpaa_rating}\r\n                            handleChange={this.handleChange}\r\n                            placeholder={\"Choose...\"}\r\n                        />\r\n\r\n                        <Input\r\n                            title={\"Rating\"}\r\n                            type={\"text\"}\r\n                            name={\"rating\"}\r\n                            value={movie.rating}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <TextArea\r\n                            title={\"Description\"}\r\n                            name={\"description\"}\r\n                            value={movie.description}\r\n                            rows={\"3\"}\r\n                            handleChange={this.handleChange}\r\n                        />\r\n\r\n                        <hr />\r\n\r\n                        <button className=\"btn btn-primary\">Save</button>\r\n                    </form>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <pre>{JSON.stringify(this.state, null, 3)}</pre>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}