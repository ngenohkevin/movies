{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/OneGenre.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class OneGenre extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      flock: [],\n      isLoaded: false,\n      error: null,\n      chickName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // consider using axios->3rd party package, way easier than fetch to handle errors\n    // \"http://localhost:9000/v1/kukuchic/flock/\"+ this.props.match.params.id\n    const chick = this.state.chickName.toLowerCase();\n    fetch(`http://localhost:9000/v1/kukuchic/` + `${chick}`).then(response => {\n      if (response.status !== \"200\") {\n        let err = Error;\n        err.message = \"Invalid response code: \" + response.status;\n        this.setState({\n          error: err\n        });\n      }\n\n      return response.json();\n    }).then(json => {\n      this.setState({\n        flock: json.flock,\n        isLoaded: true,\n        chickName: this.props.location.chickName\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    });\n  }\n\n  render() {\n    let {\n      flock,\n      isLoaded,\n      error,\n      chickName\n    } = this.state;\n\n    if (!flock) {\n      flock = [];\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this);\n    } else {\n      console.log(this.state.flock);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Chick:\", chickName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-group\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: this.props.location.pathname + \"/production\",\n              state: {\n                // the backend result does not have Production property\n                production: this.state.flock.Production\n              }\n            },\n            className: \"list-group-item list-group-item-action\",\n            children: \"Production\"\n          }, flock.operations.op_pro, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: this.props.location.pathname + \"/hatchery\",\n              state: {\n                production: this.state.flock.Hatchery\n              }\n            },\n            className: \"list-group-item list-group-item-action\",\n            children: \"Hatchery\"\n          }, flock.operations.op_hat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/OneGenre.js"],"names":["React","Component","Fragment","Link","OneGenre","state","flock","isLoaded","error","chickName","componentDidMount","chick","toLowerCase","fetch","then","response","status","err","Error","message","setState","json","props","location","render","console","log","pathname","production","Production","operations","op_pro","Hatchery","op_hat"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class OneGenre extends Component {\r\n    state = {\r\n        flock: [],\r\n        isLoaded: false,\r\n        error: null,\r\n        chickName: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        // consider using axios->3rd party package, way easier than fetch to handle errors\r\n        // \"http://localhost:9000/v1/kukuchic/flock/\"+ this.props.match.params.id\r\n        const chick = this.state.chickName.toLowerCase();\r\n        fetch(`http://localhost:9000/v1/kukuchic/`+`${chick}`)\r\n            .then((response) => {\r\n                if (response.status !== \"200\") {\r\n                    let err = Error;\r\n                    err.message = \"Invalid response code: \" + response.status;\r\n                    this.setState({ error: err });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((json) => {\r\n                this.setState(\r\n                    {\r\n                        flock: json.flock,\r\n                        isLoaded: true,\r\n                        chickName: this.props.location.chickName,\r\n                    },\r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error,\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let { flock, isLoaded, error, chickName } = this.state;\r\n\r\n        if (!flock) {\r\n            flock = [];\r\n        }\r\n\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <p>Loading...</p>;\r\n        } else {\r\n            console.log(this.state.flock);\r\n            return (\r\n                <Fragment>\r\n                    <h2>Chick:{chickName}</h2>\r\n\r\n                    <div className=\"list-group\">\r\n                        <Link\r\n                            key={flock.operations.op_pro}\r\n                            to={{\r\n                                pathname: this.props.location.pathname + \"/production\",\r\n                                state: {\r\n                                    // the backend result does not have Production property\r\n                                    production: this.state.flock.Production, \r\n                                },\r\n\r\n                            }}\r\n                            className=\"list-group-item list-group-item-action\"\r\n                        >\r\n                            Production\r\n\r\n                        </Link>\r\n                        <Link\r\n                            key={flock.operations.op_hat}\r\n                            to={{\r\n                                pathname: this.props.location.pathname + \"/hatchery\",\r\n                                state: {\r\n                                    production: this.state.flock.Hatchery,\r\n                                },\r\n\r\n                            }}\r\n                            className=\"list-group-item list-group-item-action\"\r\n                        >\r\n                            Hatchery\r\n                        </Link>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}