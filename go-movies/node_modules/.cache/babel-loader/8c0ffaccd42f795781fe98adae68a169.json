{"ast":null,"code":"var _jsxFileName = \"/home/perigrine/react_tuts/movies/go-movies/src/Components/Chicks.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chicks(props) {\n  _s();\n\n  const [flock, setFlock] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoaded, setIsLoaded] = useState();\n  useEffect(() => {\n    fetch(\"https://flockmanager.herokuapp.com/v1/kukuchic/flock\").then(response => {\n      if (response.status !== 200) {\n        setError(\"Invalid response code \", response.status);\n      } else {\n        setError(null);\n      }\n\n      return response.json();\n    }).then(json => {\n      setFlock(json.flock);\n    });\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 26\n  }, this);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message || error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chicks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-group\",\n      children: flock.map(m => /*#__PURE__*/_jsxDEV(Link, {\n        className: \"list-group-item list-group-item-action\",\n        to: `/chicks/${m.flock_name}`,\n        children: m.flock_name\n      }, m.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Chicks, \"DyYdTbBvwdPBpaKT4SC3k7nlKIM=\");\n\n_c = Chicks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chicks\");","map":{"version":3,"sources":["/home/perigrine/react_tuts/movies/go-movies/src/Components/Chicks.jsx"],"names":["React","useEffect","useState","Fragment","Link","Chicks","props","flock","setFlock","error","setError","isLoaded","setIsLoaded","fetch","then","response","status","json","message","map","m","flock_name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXY,IAAAA,KAAK,CAAC,sDAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBN,QAAAA,QAAQ,CAAC,wBAAD,EAA2BK,QAAQ,CAACC,MAApC,CAAR;AACH,OAFD,MAEO;AACHN,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACD,aAAOK,QAAQ,CAACE,IAAT,EAAP;AAEH,KATL,EAUKH,IAVL,CAUWG,IAAD,IAAU;AACZT,MAAAA,QAAQ,CAACS,IAAI,CAACV,KAAN,CAAR;AACH,KAZL;AAaH,GAdQ,EAcP,EAdO,CAAT;AAeA,MAAG,CAACI,QAAJ,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACd,MAAIF,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACS,OAAN,IAAiBT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAAA,sBACO,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKF,KAAK,CAACY,GAAN,CAAWC,CAAD,iBACP,QAAC,IAAD;AAEG,QAAA,SAAS,EAAC,wCAFb;AAGI,QAAA,EAAE,EAAG,WAAUA,CAAC,CAACC,UAAW,EAHhC;AAAA,kBAKKD,CAAC,CAACC;AALP,SACSD,CAAC,CAACE,EADX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AAkBJ;;GA1CuBjB,M;;KAAAA,M","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Chicks(props) {\r\n\r\n    const [flock, setFlock] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLoaded, setIsLoaded] = useState();\r\n\r\n    useEffect(() =>{\r\n        fetch(\"https://flockmanager.herokuapp.com/v1/kukuchic/flock\")\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    setError(\"Invalid response code \", response.status)\r\n                } else {\r\n                    setError(null);\r\n                }\r\n                return response.json();\r\n\r\n            })\r\n            .then((json) => {\r\n                setFlock(json.flock)\r\n            });\r\n    },[]);\r\n    if(!isLoaded) return <p>Loading...</p>\r\n    if (error) {\r\n        return <div>Error: {error.message || error}</div>\r\n    }return (\r\n            <Fragment>\r\n                <h2>Chicks</h2>\r\n\r\n                <div className=\"list-group\">\r\n                    {flock.map((m) => (\r\n                        <Link\r\n                            key={m.id}\r\n                           className=\"list-group-item list-group-item-action\"\r\n                            to={`/chicks/${m.flock_name}`}\r\n                        >\r\n                            {m.flock_name}\r\n                        </Link>\r\n                    ))}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}